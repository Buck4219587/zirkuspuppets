PUPPET Zirkusclown
  CHARSET: "UTF-8"
  LOGIN: " kommt zur Arbeit."
  LOGOUT: " hat Feierabend."
  APPEAR: " kommt um aufzuräumen."
  DISAPPEAR: " hat aufgeräumt."
  INFO: "Ich halte die Zirkusräumlichkeiten sauber."
  OVERFLOW: HARAKIRI
  NEWOWNER: NO
  CITYCHAT: YES
  CASESENSITIV: YES
#  SAVE: "save*"
  OWN: NO

@list: listebefehle
@start: rundgang
@clear: clear
@skipped: listskipped

ACTION start
  SET HOME C177
  SET GAMELIST "11nimmt 6nimmt 7Wonders Abluxxen AllesImEimer Atlantis Attika Attribut AufAchse Backgammon Bazaar Blaetterrauschen Blockers Bluff Bohnanza BohnDuell Bruegge CafeInternational CantStop Carcassonne Cartagena CastlesOfTuscany Caylus CC-JaegerUndSammler Clans CleverHochDrei Crosswise Diamant DieCrew Dizzle Dog Doppelkopf DoppeltSoClever Drachenherz Dudeln Dvonn Emerald Evolution Explorers FinstereFlure Fuersten Funkenschlag GanzSchoenClever Geister Go GoennenKoennen Grimoria Hadara Halali HalfPintHeroes Helvetia HeulDoch Imhotep Imperial ImSchutzeDerBurg Intrige Kardinal&Koenig KingdomBuilder KingLui Kingsburg KrassKariert Kribbeln Ligretto LionsOfLydia Manhattan Manitou MarcoPolo Medina Meuterer Monasterium MonsterExpedition NochMal NotreDame Numeri OhneFurchtUndAdel PackeisAmPol Pantheon ParisParis PiranhaPedro PuertoRico Saboteur SaeulenDerErde SanJuan SanktPetersburg SantaCruz Set Siedler SkullKing SpaceBob Sticheln StoneAge StreetSoccer ThurnUndTaxis Tichu Tongiaki Transamerica TurnIt UmKroneUndKragen Vabanque Venedig Verflixxt Verraeter Wikinger Wizard Yinsh Zatre"
  # wird mit dem täglichen puppetstart neu befüllt
  SET ROOMSTOSKIP ""
  WHEN ERROR DO error
  WHEN TIMER 3600 DO rundgang
  WHEN KEYWORD "!list" IN TELL DO listebefehle
  WHEN KEYWORD "!start" IN TELL DO rundgang
  WHEN KEYWORD "!clear" IN TELL DO clear
  WHEN KEYWORD "!skipped" IN TELL DO listskipped
END

ACTION listebefehle
  -- @start Starte den Aufräumvorgang
  -- @clear Setze die Liste der übersprungenen Räume zurück
  -- @skipped Listet die übersprungenen Räume auf
END

ACTION clear
  SET ROOMSTOSKIP ""
END

ACTION listskipped
  -- "Übersprunngen: " [ROOMSTOSKIP]
END

# counter: Zähler für die While-Schleife
# players: Summiert die Anzahl der gefundenen Spieler in den Räumen
# resets: Anzahl der Räume, in denen ein Reset durchgeführt wurde
ACTION rundgang
  SET counter 0
  SET players 0
  SET resets 0
  SET missinggames [GAMELIST]
  
  SET PUBLIC1 "<html><head><meta charset='utf-8'/><style>h1{font-family:arial,sans-serif;font-size:20px;font-weight:bold;text-align:center}table.zirkusTable{border:2px solid #a40808;background-color:#fff;width:100%;text-align:left;border-collapse:collapse}table.zirkusTable td,table.zirkusTable th{border:1px solid #aaa;padding:4px 1px}table.zirkusTable tbody td{font-size:13px}table.zirkusTable tr:nth-child(even){background:#f5c8bf}table.zirkusTable thead{background:#a40808}table.zirkusTable thead th{font-size:16px;font-weight:700;color:#fff;text-align:center;border-left:2px solid #a40808}table.zirkusTable thead th:first-child{border-left:none}</style></head><body><h1>Raumliste Zirkus</h1><table class='zirkusTable'><tr><th>Raum</th><th>Name</th><th>Spiel</th><th>Besitzer</th><th>Aktiv</th></tr>"
  SET publiccnt 2
  SET PUBLIC[publiccnt] ""
  
  -- Fange an aufzuräumen
  
  WHILE [counter] <= 180
    BEGIN
      SET zielraum "C177-[counter]"
      IF NOT [zielraum] INLIST [ROOMSTOSKIP]
        BEGIN
          >> /room [zielraum]              # Wechsel in den nächsten Raum
          GETROOMINFO
          IF [ROOM] == [zielraum]
            BEGIN
              # -- Ich bin jetzt in Raum [ROOM] mit Spiel [GAME]
              IF LISTLENGTH [GAME] > 1
                BEGIN
                  DO subraeume
                END
              ELSE
                BEGIN
                  SET spiel [GAME]
                  SET raum [ROOM]
                  DO raumreset
                  DO roominfotopublic
                END
            END
          ELSE # Raum existiert nicht
            BEGIN
              # -- [zielraum] existiert nicht
              ADDLIST ROOMSTOSKIP "[zielraum]"
            END
        END
      ELSE
        BEGIN
          # -- [zielraum] wurde übersprungen
        END
      EVAL counter = [counter] + 1
      SLEEP 3
    END  # END WHILE
  
  >> /room [HOME]
  >> /ctell Im Zirkus spielen aktuell [players] Personen. [resets] Räume zurückgesetzt.
  -- Im Zirkus spielen aktuell [players] Personen. [resets] Räume zurückgesetzt.
  
  EVAL publiccnt = [publiccnt] + 1
  SET PUBLIC[publiccnt] "</table>"
  
  DO missinggamestopublic
  
  EVAL publiccnt = [publiccnt] + 1
  SET PUBLIC[publiccnt] "</body></html>"
  
  WHILE [publiccnt] <= 100
    BEGIN
      EVAL publiccnt = [publiccnt] + 1
      UNSET PUBLIC[publiccnt]
    END

  SAVEPUBLIC

END

# Iteriert durch die Subräume eines Gebäudes mit mehreren Spielen
# GAME, GAMELIST, players, reset müssen gesetzt sein
ACTION subraeume
  SET sumraum 1
  FOR spiel IN [GAME]
    BEGIN
      SET raum "[zielraum]-[sumraum]"
      # -- Spiel [spiel] in Raum [raum]
      >> /room [raum]
      DO raumreset
      DO roominfotopublic
      EVAL sumraum = [sumraum] + 1
    END
END

# Für Spielräume: setzt zurück oder zählt Anzahl spieler
# IN GAMELIST: Liste der Spiele
# IN spiel: Spiel im aktuellen Raum
# IN players: Counter für die Anzahl der Spieler 
# IN resets: Counter für die Anzahl der zurückgesetzten Räume 
# IN/OUT missinggames: Liste von Spielen, ein gefundenes Spiel wird aus der Liste entfernt
ACTION raumreset
  IF [spiel] INLIST [GAMELIST]
    BEGIN
      REMOVELIST missinggames [spiel]
      DO spielerzahl
      IF [x] > 0
        BEGIN
          # -- Hier sind die folgenden Personen [WHO]
          EVAL players = [players] + [x]
        END
      ELSE
        BEGIN
          # -- Hier ist niemand... führe reset durch.
          >> /reset
          EVAL resets = [resets] + 1
        END
      END
  ELSE # Spiel nicht in Liste
    BEGIN
      # -- [spiel] ist nicht in der Liste der Spiele.
    END
END

ACTION spielerzahl
  GETWHO                               # liefert in [WHO] eine Liste mit
                                       # den Namen der Anwesenden
  SET x 0                              # die Anzahl x wird zu Beginn auf 0 gesetzt.
  FOR anwesender IN [WHO]              # Alle Namen aus der Liste
                                       #   werden abgearbeitet.
    BEGIN
      GETINFO [anwesender]             # Die Infos zum Namen werden gelesen.
      IF NOT [PUPPET]                  # Puppets werden nicht gezählt.
        EVAL x = [x] + 1               # Für jeden Spieler wird x erhöht.
    END
END

# GETROOMINFO muss zuvor aufgerufen werden
# publiccnt muss gesetzt sein
ACTION roominfotopublic
  SET arg1 [NAME]
  DO htmlEncode
  LOCAL raumname = [out1]

  SET arg1 [OWNER]
  DO htmlEncode
  LOCAL raumowner = [out1]

  SET arg1 "<tr><td>[raum]</td><td>[raumname]</td><td>[spiel]</td><td>[raumowner]</td><td>[ACTIVE]</td></tr>"
  DO writeToPublic
END

# Schreibt missinggames in eine Tabelle
# publiccnt muss gesetzt sein
ACTION missinggamestopublic
  EVAL publiccnt = [publiccnt] + 1
  SET PUBLIC[publiccnt] "<table class='zirkusTable'><tr><th>Fehlendes Spiel</th></tr>"

  FOR missing IN [missinggames]
    BEGIN
      SET arg1 "<tr><td>[missing]</td></tr>"
      DO writeToPublic
    END

  EVAL publiccnt = [publiccnt] + 1
  SET PUBLIC[publiccnt] "</table>"
END

# Schreibt text in die public-Variablen
# IN/OUT publiccnt der aktuelle public-Zähler
# IN arg1: Der zu schreibende Text
ACTION writeToPublic
  LOCAL currenttext = [arg1]
  EVAL publength = LENGTH [PUBLIC[publiccnt]]
  EVAL currenttextlength = LENGTH [currenttext]
  EVAL totallength = [publength] + [currenttextlength]

  IF [totallength] > 4500
    BEGIN
      EVAL publiccnt = [publiccnt] + 1
      SET PUBLIC[publiccnt] ""
    END

  SET PUBLIC[publiccnt] "[PUBLIC[publiccnt]] [currenttext]"
END

# Ersetzt in einem String Sonderzeichen duch HTML-Encodierte Zeichen
# IN arg1: Der zu bearbeitende String
# OUT out1: Der bearbeitete String
ACTION htmlEncode
  LOCAL tmp = [arg1]
  REPLACE tmp "ä" "&auml;"
  REPLACE tmp "ö" "&ouml;"
  REPLACE tmp "ü" "&uuml;"
  REPLACE tmp "Ä" "&Auml;"
  REPLACE tmp "Ö" "&Ouml;"
  REPLACE tmp "Ü" "&Uuml;"
  REPLACE tmp "ß" "&szlig;"  
  REPLACE tmp "é" "&eacute;"
  REPLACE tmp "É" "&Eacute;"
  REPLACE tmp "è" "&egrave;"
  REPLACE tmp "È" "&Egrave;"
  SET out1 [tmp]
END

ACTION error
  >> Ein Fehler ist aufgetreten ([MESSAGE])
END

PUPPETEND
